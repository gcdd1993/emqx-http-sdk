import java.text.SimpleDateFormat

/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    // Apply the java Plugin to add support for Java.
    id 'java'
}

dependencies {
    // 定义依赖版本
    constraints {
        compileOnly("com.fasterxml.jackson.core:jackson-annotations:$jackson_version")
        compileOnly("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jackson_version")
        testImplementation("com.fasterxml.jackson.core:jackson-annotations:$jackson_version")
        testImplementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jackson_version")
    }

    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    compileOnly("org.projectlombok:lombok:$lombok_version")
    annotationProcessor("org.projectlombok:lombok:$lombok_version")

    testCompile("org.projectlombok:lombok:$lombok_version")
    testAnnotationProcessor("org.projectlombok:lombok:$lombok_version")

    testImplementation("ch.qos.logback:logback-classic:$logback_version")
}

tasks.named('test') {
    // Use junit platform for unit tests.
    useJUnitPlatform()
}

group "io.github.gcdd1993"
version root_version

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

jar {
    enabled = true
    manifest {
        attributes(
                "Implementation-Title": project.name,
                "Implementation-Version": project.version,
                "Built-By": System.properties["user.name"],
                "Build-Timestamp": new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
                "Created-By": "Gradle ${gradle.gradleVersion}",
                "Build-Jdk": "${System.properties["java.version"]} (${System.properties["java.vendor"]} ${System.properties["java.vm.version"]})",
                "Build-OS": "${System.properties["os.name"]} ${System.properties["os.arch"]} ${System.properties["os.version"]}"
        )
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
